import{j as l}from"./emotion-react-jsx-runtime.browser.esm-B6nDGTOp.js";import{a as m}from"./assignDisplayName-lT0r0-ot.js";import{r as P}from"./random-CmfFXdz5.js";import{c}from"./emotion-react.browser.esm-DKbCFQzN.js";import{t as d}from"./index-BA0eH0Wu.js";import{c as _}from"./index-DbGQkxQ5.js";import{r}from"./index-qCb0-TeD.js";import{d as x}from"./index-gEP6Tn1u.js";const f="div",b=P(),g=`card-${b}-`,w=`--${g}`,i={paddingBlock:`${w}padding-block`},C={noPaddingCardContent:`${g}no-padding-content`},s=x({root:c({display:"flex",flexDirection:"column",alignItems:"stretch",border:`1px solid ${d.colors.neutral003}`,borderRadius:"12px",background:d.colors.white,color:d.colors.neutral010,[i.paddingBlock]:"16px"},";label:emotion-root;"),content:c({flex:1,display:"flex",flexDirection:"column",alignItems:"stretch",justifyContent:"stretch",gap:8,paddingBlock:`var(${i.paddingBlock})`,paddingInline:"24px"},";label:emotion-content;")}),k=c([s.root,s.content],";label:emotion-cssCard;"),u=r.forwardRef(function({component:e=f,children:n,...o},t){return l(e,{css:k,...o,ref:t,children:n})});m(u,"Card");const E="div",y=r.forwardRef(function({component:e=f,children:n,...o},t){return l(e,{css:s.root,...o,ref:t,children:n})});m(y,"Card.NoPadding");const N=r.forwardRef(function({component:e=E,children:n,...o},t){const h=r.useMemo(()=>_(C.noPaddingCardContent,o.className),[o.className]);return l(e,{css:s.content,...o,className:h,ref:t,children:n})});m(N,"Card.NoPadding.Content");const p=Object.assign(u,{NoPadding:Object.assign(y,{Content:N}),classNameRecord:C,cssVarNameRecord:i});try{p.displayName="api",p.__docgenInfo={description:"",displayName:"api",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.
The component used for the root node.`,name:"component",required:!1,type:{name:'(ElementType<any, keyof IntrinsicElements> & "symbol") | (ElementType<any, keyof IntrinsicElements> & "object") | ... 177 more ... | (ElementType<...> & FunctionComponent<...>)'}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{CardOwnProps.displayName="CardOwnProps",CardOwnProps.__docgenInfo={description:"List the own props of the component.",displayName:"CardOwnProps",props:{}}}catch{}export{p as a};
