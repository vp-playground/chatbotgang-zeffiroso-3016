function r(t){return Object.getOwnPropertySymbols(t).filter(a=>Object.prototype.propertyIsEnumerable.call(t,a))}function o(t){return t==null?t===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(t)}const n="[object RegExp]",e="[object String]",c="[object Number]",s="[object Boolean]",b="[object Arguments]",g="[object Symbol]",y="[object Date]",j="[object Map]",i="[object Set]",T="[object Array]",A="[object Function]",l="[object ArrayBuffer]",u="[object Object]",p="[object Error]",f="[object DataView]",m="[object Uint8Array]",d="[object Uint8ClampedArray]",U="[object Uint16Array]",B="[object Uint32Array]",I="[object BigUint64Array]",S="[object Int8Array]",O="[object Int16Array]",w="[object Int32Array]",x="[object BigInt64Array]",E="[object Float32Array]",F="[object Float64Array]";export{x as A,I as B,r as a,U as b,d as c,m as d,e,i as f,o as g,O as h,w as i,S as j,F as k,E as l,j as m,c as n,u as o,y as p,s as q,n as r,g as s,f as t,B as u,l as v,T as w,b as x,A as y,p as z};
